# These environment variables must be set in CircleCI UI
#
# NPM_TOKEN - A valid NPM token for releases
#
# NOTE:
# - to validate changes to this file locally using the circleci CLI tool:
#
#     circleci config process .circleci/config.yml
#
# - to try run jobs locally:
#
#     circleci config process .circleci/config.yml > tmp/processed.yml
#     circleci local execute -c tmp/processed.yml --job build-nodejs-current
#
version: 2.1

orbs:
  codecov: codecov/codecov@3.2.3
  browser-tools: circleci/browser-tools@1.4.1

references:
  working_directory: &working_directory ~/webextension-polyfill

  defaults: &defaults
    working_directory: *working_directory
    # See https://hub.docker.com/r/cimg/node/tags for the cimg/node tags
    # related to specific nodejs versions.
    docker:
      - image: cimg/node:14.19

  defaults-browsers: &defaults-browsers
    <<: *defaults
    # Image variant (combined with circleci/browser-tools orb) used to
    # run integration tests using Firefox, Chrome and Xvfb.
    docker:
      - image: cimg/node:14.19-browsers


commands:
  run_npm_install:
    description: install npm dependencies
    steps:
      - run: npm i

  run_npm_build:
    description: build project in << parameters.node_env >> mode
    parameters:
      node_env:
        type: enum
        default: production
        enum: ["production", "test"]
    steps:
      - run:
          command: npm run build --if-present
          environment:
            NODE_ENV: << parameters.node_env >>

  run_test_minified:
    description: rerun unit tests on minified file
    steps:
      - run:
          command: npm run test-minified

  run_test_bundlers:
    description: rerun unit tests on webpack and browserify bundled files
    steps:
      - run: npm install -g browserify webpack webpack-cli
      - run: |
          export PATH=$PATH:../.npm-global/bin
          node ./scripts/run-module-bundlers-smoketests.js

  run_xephyr:
    description: run Xephyr on DISPLAY=:10
    steps:
      - run: |
          sudo apt update
          sudo apt install xserver-xephyr
          Xephyr -ac -br -noreset -screen 1280x1024x24 :10 &
          sleep 2

  run_functional_tests:
    description: run integration tests on Firefox and Chrome browsers
    steps:
      # circleci browsers image variant does include and run Xvfb
      # unfortunately Chrome seems to intermittently fail to connect
      # to it successfully:
      #
      #     ERROR:browser_main_loop.cc(1434)] Unable to open X display
      #
      # On the contrary it seems to don't happen with Xephyr.
      - run_xephyr
      - run:
          command: node ./scripts/run-browsers-smoketests.js
          environment:
            DISPLAY: :10.0
            CHROMEDRIVER_VERBOSE_LOGFILE: /tmp/chromedriver.log
      - store_artifacts:
          # chromedriver verbose logs stored in the artifacts to make
          # it easier investigate CI jobs chromedriver issues.
          path: /tmp/chromedriver.log
  run_tests:
    description: run tests
    steps:
      - run:
          name: run linting check and unit tests with coverage
          command: npm run test-coverage
          environment:
            COVERAGE_WITH_SOURCEMAP: "1"
      - store_artifacts:
          path: coverage
      - codecov/upload
      - run_test_minified
      - run_test_bundlers
      - run_functional_tests

  attach_project_repo:
    description: attach repo from workspace
    steps:
      - attach_workspace:
          at: *working_directory

  persist_project_repo:
    description: persist repo in workspace
    steps:
      - persist_to_workspace:
          root: *working_directory
          paths: .

jobs:
  build:
    <<: *defaults-browsers
    steps:
      - browser-tools/install-browser-tools
      - attach_project_repo
      - checkout
      - run_npm_install
      - run_npm_build:
          node_env: test
      - run_tests
      - persist_project_repo

  release-tag:
    <<: *defaults
    steps:
      - attach_project_repo
      - run_npm_build:
          node_env: production
      - run:
          name: npm registry auth
          command: echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc
      - run:
          name: npm registry publish
          command: npm publish

workflows:
  default-workflow:
    jobs:
      - build:
          name: build-nodejs-current
          filters:
            tags:
              only: /.*/
      - release-tag:
          requires:
            - build-nodejs-current
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/

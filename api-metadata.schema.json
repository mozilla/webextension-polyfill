{
  "definitions": {
    "function_metadata": {
      "type": "object",
      "properties": {
        "minArgs": {
          "description": "The minimum number of arguments which must be passed to the function. If called with fewer than this number of arguments, the wrapper will raise an exception.",
          "type": "number"
        },
        "maxArgs": {
          "description": "The maximum number of arguments which may be passed to the function. If called with more than this number of arguments, the wrapper will raise an exception.",
          "type": "number"
        },
        "fallbackToNoCallback": {
          "description": "If the function doesn't take a callback parameter in some browsers and throws an error when a callback is passed.",
          "type": "boolean"
        },
        "singleCallbackArg": {
          "description": "If the function callback takes only one parameter.\nSet to `false` to enforce that the function's varargs are never unwrapped.",
          "type": "boolean"
        }
      },
      "required": ["minArgs", "maxArgs"],
      "additionalProperties": false
    },

    "namespace_metadata": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^(?!(maxArgs|minArgs|noCallback)$).*": {
          "anyOf": [
            { "$ref": "#/definitions/function_metadata" },
            { "$ref": "#/definitions/namespace_metadata" }
          ]
        }
      }
    }
  },

  "additionalProperties": {
    "description": "Top-level namespace",
    "$ref": "#/definitions/namespace_metadata"
  }
}
